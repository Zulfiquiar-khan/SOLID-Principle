Liskov's Substitution Principle
===============================

Given by Barbara Liskov in the year of 1987 (Java was created in the year of 1995)

Definitions
============

 If S is a subtype of T in a program then all objects of type T in the program can be substituted to objects of type S 
 without changing any desired properties of the program(eg correctness).
 
 Supertypes are substitutable by their subtype.
 
 
 Behavioral subtyping is trivially undecidable in general: if q is the property "method for x always terminates",
 then it is impossible for a program (e.g., a compiler) to verify that it holds true for some subtype S of T, even if q does hold for T.
 Nonetheless, the principle is useful in reasoning about the design of class hierarchies.
 